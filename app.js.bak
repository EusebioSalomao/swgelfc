//Carregando módulos
const express = require('express')
const handlebars = require('express-handlebars')
const bodyParser = require('body-parser')
const mongoose = require('mongoose')

const app = express()
const admin = require("./routes/admin")
const path = require('path')
require('./modles/Postagem')
const Postagem = mongoose.model('postagens')
require('./modles/Categoria')
const Categoria = mongoose.model('categorias')

const sassion = require('express-session')
const flash = require('connect-flash')
const session = require('express-session')
const { redirect } = require('statuses')
const Usuario = require('./routes/usuarioRouter')
const passport = require('passport')
require('./config/auth')(passport)
const db = require('./config/db')


//Configurações
//sessão
app.use(session({
    secret: 'corusodenode',
    resave: true,
    saveUninitialized: true
}))
app.use(passport.initialize())
app.use(passport.session())
app.use(flash())

//conf middleware
app.use((req, res, next) => {
    res.locals.success_msg = req.flash('success_msg')
    res.locals.error_msg = req.flash('error_msg')
    res.locals.error = req.flash('error')
    res.locals.user = req.user || null;
    next()
})
//Body parser
app.use(bodyParser.urlencoded({ extended: true }))
app.use(bodyParser.json())

//Handlebars
app.engine('handlebars', handlebars.engine({ defaultLayout: 'main' }))
app.set('view engine', 'handlebars')
//public
app.use(express.static(path.join(__dirname, "public")))

//Mongoose
db();
/*
mongoose.Promise = global.Promise
mongoose.connect(db.mongoURI).then(() => {
    console.log('BD conectado com sucesso!')
}).catch((err) => {
    console.log('Erro ao se conectar BD ' + err)
})*/
//Rotas
//principal
app.get("/", (req, res) => {
    Postagem.find().lean().populate('categoria').sort({ data: 'desc' }).then((postagens) => {
        res.render('index', { postagens: postagens })
    }).catch((err) => {
        req.flash('error_msg', 'Houve um erro as carregar as postagen recentes')
        res.redirect('/')
    })
})
//Rota Leia mais
app.get('/postagens/:slug', (req, res) => {
    Postagem.findOne({ slug: req.params.slug }).lean().then((postagem) => {
        if (postagem) {
            res.render('postagem/index', { postagem: postagem })
        } else {
            req.flash('error_msg', 'Esta postagem não existe!')
            res.redirect('/')
        }
    }).catch((err) => {
        req.flash('error_msg', 'Houve um erro interno')
        res.redirect('/')
    })
})
//Rota principal de categoria - Home
app.get('/categorias', (req, res) => {
    Categoria.find().lean().then((categorias) => {
        res.render('categoria/indexCategoria', { categorias })
    }).catch((error) => {
        req.flash('error_msg', 'Hou um erro ao caregar a lista de categorias - Home')
    })
})
app.get('/categorias/:slug', (req, res) => {
    Categoria.findOne({ slug: req.params.slug }).lean().then((categoria) => {
        if (categoria) {
            Postagem.find({ categoria: categoria }).lean().then((postagens) => {
                res.render('categoria/postagens', { categoria, postagens })
            })
        } else {
            req.flash('error_msg', 'Categoria naão encontrada!')
            res.redirect('/')
        }
    }).catch((err) => {
        req.flash('error_msg', 'Error! Não deu pesquisar a categoria!')
        res.redirect('/')
    })
})

//Rota da Adm
app.use("/adm", admin)

//Rotas de Usuarios
app.use('/user', Usuario)




//Outros
const PORT = process.env.PORT || 8081
app.listen(PORT, () => {
    console.log('Servidor de Blog Rodando...')
})
//*927096562 - Adolfo-H2O